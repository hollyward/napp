export interface SSLOptions {
    /**
     * A string or Buffer containing the private key, certificate and CA certs of the client in PFX or PKCS12 format.
     */
    pfx?: any;
    /**
     * A string or Buffer containing the private key of the client in PEM format. (Could be an array of keys).
     */
    key?: any;
    /**
     * A string of passphrase for the private key or pfx.
     */
    passphrase?: string;
    /**
     *  A string or Buffer containing the certificate key of the client in PEM format. (Could be an array of certs).
     */
    cert?: any;
    /**
     * An array of strings or Buffers of trusted certificates in PEM format. If this is omitted several well known "root"
     * CAs will be used, like VeriSign. These are used to authorize connections.
     */
    ca?: any;
    /**
     * If true, the server certificate is verified against the list of supplied CAs. An 'error' event is emitted if verification
     * fails; err.code contains the OpenSSL error code. Default: true.
     */
    rejectUnauthorized?: boolean;
    /**
     * Servername for SNI (Server Name Indication) TLS extension.
     */
    servername?: string;
}
